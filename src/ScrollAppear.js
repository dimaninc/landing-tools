// Generated by CoffeeScript 1.12.7
(function() {
  var ScrollAppear;

  ScrollAppear = (function() {
    function ScrollAppear(options) {
      this.window = $(window);
      this.options = $.extend({
        selector: '[data-scroll-appear]',
        selectorSuffixForNonAppeared: null,
        onFinish: 'scroll-appeared',
        windowHeightFactor: 1.5,
        delayAttr: 'data-appear-delay',
        eventClass: '.scrollappear'
      }, options);
      this.count = this.getElements().length;
      this.countLoaded = 0;
      this.setupDelays().go().worker();
    }

    ScrollAppear.prototype.setupDelays = function() {
      var self;
      self = this;
      $('[' + this.options.delayAttr + ']').each(function() {
        var $e;
        $e = $(this);
        $e.css({
          'transition-delay': $e.attr(self.options.delayAttr)
        });
        return true;
      });
      return this;
    };

    ScrollAppear.prototype.go = function() {
      this.window.on('scroll' + this.options.eventClass, (function(_this) {
        return function() {
          return _this.worker();
        };
      })(this));
      return this;
    };

    ScrollAppear.prototype.getSuffix = function() {
      if (!this.options.selectorSuffixForNonAppeared && typeof this.options.onFinish === 'string') {
        return ':not(' + this.options.onFinish + ')';
      } else {
        return this.options.selectorSuffixForNonAppeared;
      }
    };

    ScrollAppear.prototype.getFullSelector = function() {
      return options.selector + this.getSuffix();
    };

    ScrollAppear.prototype.getElements = function() {
      return $(this.getFullSelector());
    };

    ScrollAppear.prototype.finishElement = function($e) {
      if (typeof this.options.onFinish === 'string') {
        $e.addClass(this.options.onFinish);
      } else {
        this.options.onFinish($e);
      }
      return this;
    };

    ScrollAppear.prototype.stepDone = function() {
      this.countLoaded++;
      if (this.countLoaded === this.count) {
        this.finish();
      }
      return this;
    };

    ScrollAppear.prototype.finish = function() {
      this.window.off(this.options.eventClass);
      return this;
    };

    ScrollAppear.prototype.worker = function() {
      var scrollBreakPoint, self;
      self = this;
      scrollBreakPoint = this.window.scrollTop() + this.window.height() / this.options.windowHeightFactor;
      this.getElements().each(function() {
        var $e;
        $e = $(this);
        if (scrollBreakPoint >= $e.offset().top) {
          self.finishElement($e);
          return self.stepDone();
        }
      });
      return this;
    };

    return ScrollAppear;

  })();

}).call(this);

//# sourceMappingURL=ScrollAppear.js.map
